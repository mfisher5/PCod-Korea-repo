library(readr)
Fst_Korea_v_Alaska <- read_delim("D:/Pacific cod/DataAnalysis/PCod-Korea-repo/results/verif/Fst_Korea_v_Alaska.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(Fst_Korea_v_Alaska)
ggplot(Fst_Korea_v_Alaska, aes(x=Region,y=Fst)) +
geom_boxplot()
library(ggplot2)
ggplot(Fst_Korea_v_Alaska, aes(x=Region,y=Fst)) +
geom_boxplot()
ggplot(Fst_Korea_v_Alaska, aes(x=Region,y=Fst)) +
geom_point()
library(readr)
FST_by_Distance <- read_delim("D:/Pacific cod/DataAnalysis/PCod-Korea-repo/results/FST_by_Distance.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(FST_by_Distance)
ggplot(Fst_Korea_v_Alaska, aes(x=Region,y=Fst)) +
geom_scatter()
mydata <- read_delim("D:/Pacific cod/DataAnalysis/PCod-Korea-repo/results/FST_by_Distance.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
ggplot(mydata, aes(x=DISTANCE, y=FST)) +
geom_boxplot()
ggplot(mydata, aes(x=DISTANCE, y=FST)) +
geom_point()
ggplot(mydata, aes(x=DISTANCE, y=FST)) +
geom_point(aes(col=GROUP))
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
ggcols <- gg_color_hue(2)
ggplot(mydata, aes(x=DISTANCE, y=FST)) +
geom_point(aes(col=GROUP)) +
scale_color_manual(name = "Region", values = c("KOR" = ggcols[1], "US/CAN" = ggcols[2]))
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
ggcols <- gg_color_hue(2)
ggplot(subset(mydata, GROUP != "US/CAN-SalishSea", aes(x=DISTANCE, y=FST)) +
geom_point(aes(col=GROUP)) +
scale_color_manual(name = "Region", values = c("KOR" = ggcols[1], "US/CAN" = ggcols[2]))
`ccc)`
ggplot(subset(mydata, GROUP != "US/CAN-SalishSea"), aes(x=DISTANCE, y=FST)) +
geom_point(aes(col=GROUP)) +
scale_color_manual(name = "Region", values = c("KOR" = ggcols[1], "US/CAN" = ggcols[2]))
ggplot(subset(mydata, GROUP != "US/CAN-SalishSea"), aes(x=DISTANCE, y=FST)) +
geom_point(aes(col=GROUP), size = 2) +
scale_color_manual(name = "Region", values = c("KOR" = ggcols[1], "US/CAN" = ggcols[2]))
ggplot(subset(mydata, GROUP != "US/CAN-SalishSea"), aes(x=DISTANCE, y=FST)) +
geom_point(aes(col=GROUP), size = 2) +
ylab("Fst") +
scale_color_manual(name = "Region", values = c("KOR" = ggcols[1], "US/CAN" = ggcols[2])) +
theme(axis.text = element_text(size = 16),
axis.title = element_text(size = 16))
ggplot(subset(mydata, GROUP != "US/CAN-SalishSea"), aes(x=DISTANCE, y=FST)) +
geom_point(aes(col=GROUP), size = 2) +
ylab("Fst") +
xlab("Distance") +
scale_color_manual(name = "Region", values = c("KOR" = ggcols[1], "US/CAN" = ggcols[2])) +
theme(axis.text = element_text(size = 16),
axis.title = element_text(size = 18))
2.7/6
10+12+1+2+6
31*.5
31*.2
23*.2
4*.2
0.19*2
0.19*3
library(readr)
library(ggplot2)
library(reshape2)
library(dplyr)
IslandStats <- read_delim("D:/Pacific cod/DataAnalysis/PCod-Compare-repo/results/IslandStats.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
head(IslandStats)
mydata = melt(IslandStats)
colnames(mydata) <- c("Scenario", "Measure", "value")
head(mydata)
newdata = subset(mydata, Measure %in% c("Mean_Regions_perLG","Mean_Size_Regions"))
stdev <- subset(mydata, Measure %in% c("St_Dev", "St_Dev_1"))
plot <- ggplot(data = newdata, aes(x = Scenario, y = value)) +
geom_point(aes(col=newdata$Measure), size = 4) +
geom_errorbar(aes(ymin=value-stdev$value, ymax = value+stdev$value), linetype = c(rep(1,3),rep(2,3)), width = 0.25)
plot + xlab("Divergence Scenario") +
ylab("Value") +
scale_x_discrete(labels=c("Primary,\n With Gene Flow", "Secondary,\nWith Gene Flow", "Without Gene Flow")) +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 14))
scene_cols <- c("gray30","deepskyblue4", "mediumorchid2")
plot2 <- ggplot(data = newdata, aes(x = Measure, y = value)) +
geom_point(aes(col=newdata$Scenario, pch=newdata$Scenario), size = 6) +
#geom_point(size = 6, pch = 1) +
geom_errorbar(aes(ymin=value-stdev$value, ymax = value+stdev$value), linetype = c(rep(1,3),rep(2,3)), width = 0.25)
plot2 +
scale_color_manual(values = scene_cols) +
scale_shape_manual(values = c(15,17,16)) +
scale_x_discrete(labels=c("Mean Size\nper Region", "Mean Regions\nper Linkage Group")) +
scale_y_continuous(labels = seq(0,7,by=1), breaks = seq(0,7,by=1)) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 14))
library(readr)
library(ggplot2)
library(dplyr)
# Load Data ---------------
# Load Data ---------------------------------------------------------------
setwd("D:/Pacific cod/DataAnalysis/PCod-Korea-repo/metadata")
sample_data <- read_delim("D:/Pacific cod/DataAnalysis/PCod-Korea-repo/metadata/sample_data_newJB.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
sample_list <- read_delim("D:/Pacific cod/DataAnalysis/PCod-Korea-repo/metadata/sample_list_wjb.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
mydata <- right_join(sample_data, sample_list, by="Sample.ID")
dim(mydata)
dim(sample_list)
View(mydata)
# Edit Data Frame -----------------------------------------------
## max for x axis
xmax <-  max(as.numeric(mydata$TL.cm), na.rm = TRUE) + 1
## filter for NAs, make numeric
data = subset(mydata, !is.na(BW.g))
data = subset(data, !is.na(TL.cm))
data$TL.cm <- as.numeric(data$TL.cm)
data$TL.cm <- as.numeric(data$TL.cm)
head(data)
##
neworder <- c("YSBlock", "Boryeong", "Namhae", "Geoje", "Jinhae Bay", "Pohang","Jukbyeon")
plotdata <- arrange(transform(data,
Site=factor(Site,levels=neworder)),Site)
install.packages("utf8")
# Edit Data Frame -----------------------------------------------
## max for x axis
xmax <-  max(as.numeric(mydata$TL.cm), na.rm = TRUE) + 1
## filter for NAs, make numeric
data = subset(mydata, !is.na(BW.g))
data = subset(data, !is.na(TL.cm))
data$TL.cm <- as.numeric(data$TL.cm)
data$TL.cm <- as.numeric(data$TL.cm)
head(data)
##
neworder <- c("YSBlock", "Boryeong", "Namhae", "Geoje", "Jinhae Bay", "Pohang","Jukbyeon")
plotdata <- arrange(transform(data,
Site=factor(Site,levels=neworder)),Site)
Site <- c("Pohang", "Jukbyeon", "Jukbyeon","Namhae", "Geoje", "YSBlock", "Boryeong", "Jinhae Bay")
LAM_Female = c(44.02, 58.27, 44.02, 44.02,44.02,44.02,44.02,44.02)
LAM_Male <- c(32.66,58.82, 32.66,32.66,32.66,32.66,32.66,32.66)
linetype <- c(1,1,2,1,1,1,1,1)
mat_data <- cbind(Site, LAM_Female, LAM_Male, linetype)
mat_data <- as.data.frame(mat_data)
mat_data$LAM_Female <- as.numeric(LAM_Female)
mat_data$LAM_Male <- as.numeric(LAM_Male)
head(mat_data)
str(mat_data)
## code to squish Y axis
library(scales)
squish_trans <- function(from, to, factor) {
trans <- function(x) {
# get indices for the relevant regions
isq <- x > from & x < to
ito <- x >= to
# apply transformation
x[isq] <- from + (x[isq] - from)/factor
x[ito] <- from + (to - from)/factor + (x[ito] - to)
return(x)
}
inv <- function(x) {
# get indices for the relevant regions
isq <- x > from & x < from + (to - from)/factor
ito <- x >= from + (to - from)/factor
# apply transformation
x[isq] <- from + (x[isq] - from) * factor
x[ito] <- to + (x[ito] - (from + (to - from)/factor))
return(x)
}
# return the transformation
return(trans_new("squished", trans, inv))
}
## create colors for male, female
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
ggcols <- gg_color_hue(2)
## plot
ggplot(plotdata, aes(x=TL.cm, y=BW.g)) +
geom_point(aes(col = Sex, pch = Migrant), size = 3) +
geom_point(data=filter(plotdata, Migrant == "Yes"), aes(x=TL.cm, y=BW.g), col = "black", pch = 2, size = 3) +
facet_wrap(~Site, nrow = 4, ncol = 2) +
xlab("Total Length (cm)") +
ylab("Body Weight (g)") +
scale_x_continuous(trans = squish_trans(85,110,4)) +
theme(axis.title = element_text(size = 14, face = "bold"),
axis.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12, face = "bold"),
strip.text = element_text(size = 12)) +
geom_vline(data=mat_data, aes(xintercept = LAM_Female, lty = linetype), col = ggcols[1]) +
geom_vline(data=mat_data, aes(xintercept = LAM_Male, lty = linetype), col = ggcols[2])
