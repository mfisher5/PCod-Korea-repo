RowSideColors = rev(labels_colors(dend_edge)), # to add nice colored strips
col = some_col_func
)
dend_edge <- as.dendrogram(edge.hclust)
dend_edge <- color_branches(dend_edge, k=2)
dend_edge
plot(dend_edge)
labels_colors(dend_edge) <- rainbow_hcl(5)[sort_levels_values(as.numeric(odata_combo$Sampling.Site)[order.dendrogram(dend_edge)])]
labels(dend_edge) <- paste(as.character(odata_combo$Sampling.Site)[order.dendrogram(dend_edge)],
"(",labels(dend_edge),")",
sep = "")
dend_edge <- set(dend_edge, "labels_cex", 0.5)
dend_edge <- hang.dendrogram(dend_edge,hang_height=0.1)
par(mar = c(3,3,3,7))
siteyears = unique(odata_combo$SiteYear)
plot(dend_edge,
main = "Clustered Edge Microchemistry by Site
(k=2)",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = siteyears, fill = rainbow_hcl(5))
legend("topleft", legend = odata_combo$Sampling.Site, fill = rainbow_hcl(5))
dend_edge <- as.dendrogram(edge.hclust)
dend_edge <- color_branches(dend_edge, k=2)
dend_edge
plot(dend_edge)
labels_colors(dend_edge) <- rainbow_hcl(5)[sort_levels_values(as.numeric(odata_combo$Sampling.Site)[order.dendrogram(dend_edge)])]
labels(dend_edge) <- paste(as.character(odata_combo$Sampling.Site)[order.dendrogram(dend_edge)],
"(",labels(dend_edge),")",
sep = "")
dend_edge <- set(dend_edge, "labels_cex", 0.5)
dend_edge <- hang.dendrogram(dend_edge,hang_height=0.1)
par(mar = c(3,3,3,7))
siteyears = unique(odata_combo$SiteYear)
plot(dend_edge,
main = "Clustered Edge Microchemistry by Site
(k=2)",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = unique(odata_combo$Sampling.Site), fill = rainbow_hcl(5))
dend_edge
str(dend_edge)
edge.hclust
labels_colors(dend_edge) <- rainbow_hcl(5)[sort_levels_values(as.numeric(odata_combo$Sampling.Site)[order.dendrogram(dend_edge)])]
labels(dend_edge) <- paste(as.character(odata_combo$Sampling.Site)[order.dendrogram(dend_edge)],
"(",labels(dend_edge),")",
sep = "")
dend_edge <- set(dend_edge, "labels_cex", 0.5)
dend_edge <- hang.dendrogram(dend_edge,hang_height=0.1)
par(mar = c(3,3,3,7))
siteyears = unique(odata_combo$SiteYear)
plot(dend_edge,
main = "Clustered Edge Microchemistry by Site
(k=2)",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = unique(odata_combo$Sampling.Site), fill = rainbow_hcl(5)[sort_levels_values(as.numeric(odata_combo$Sampling.Site)[order.dendrogram(dend_edge)])])
hclust_methods <- c("ward.D", "single", "complete", "average", "mcquitty",
"median", "centroid", "ward.D2")
iris_dendlist <- dendlist()
for(i in seq_along(hclust_methods)) {
hc_iris <- hclust(d_iris, method = hclust_methods[i])
iris_dendlist <- dendlist(iris_dendlist, as.dendrogram(hc_iris))
}
names(iris_dendlist) <- hclust_methods
iris_dendlist
iris_dendlist_cor <- cor.dendlist(iris_dendlist)
ris_dendlist %>% dendlist(which = c(1,8)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE) # (common_subtrees_color_branches = TRUE)
iris_dendlist %>% dendlist(which = c(1,8)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE) # (common_subtrees_color_branches = TRUE)
dendlist <- c(as.dendrogram(edge.hclust), as.dendrogram(core.hclust))
dendlist_cor <- cor.dendlist(dendlist)
class(dendlist[1])
class(as.dendrogram(edge.hclust))
names(iris_dendlist) <- c("edge", "core")
names(dendlist) <- c("edge", "core")
dendlist_cor <- cor.dendlist(dendlist)
odata_dendlist <- c(as.dendrogram(edge.hclust), as.dendrogram(core.hclust))
names(odata_dendlist) <- c("edge", "core")
dendlist_cor <- cor.dendlist(odata_dendlist)
dendlist_cor <- cor.dendlist(odata_dendlist, method="cophenetic")
odata_dendlist <- c(edge.hclust, core.hclust)
names(odata_dendlist) <- c("edge", "core")
dendlist_cor <- cor.dendlist(odata_dendlist, method="cophenetic")
odata_dendlist <- dendlist(edge.hclust, core.hclust)
odata_dendlist <- dendlist(as.dendrogram(edge.hclust), as.dendrogram(core.hclust))
names(odata_dendlist) <- c("edge", "core")
dendlist_cor <- cor.dendlist(odata_dendlist, method="cophenetic")
dendlist_cor <- cor.dendlist(odata_dendlist, method="spearman")
dendlist_cor <- cor.dendlist(odata_dendlist, method_cof="spearman")
dendlist_cor <- cor.dendlist(odata_dendlist, method_coef="spearman")
corrplot::corrplot(dendlist_cor, "pie", "lower")
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE) # (common_subtrees_color_branches = TRUE)
odata_dendlist %>% dendlist(which = c(1,2)) %>% untangle %>%
set("branches_k_color", k=3) %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(common_subtrees_color_branches = TRUE)
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
set("rank_branches") %>%
tanglegram(common_subtrees_color_branches = TRUE)
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
tanglegram(common_subtrees_color_branches = TRUE)
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
tanglegram(match_order_by_labels)
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
tanglegram(match_order_by_labels=TRUE)
cutree(edge.hclust)
cutree(edge.hclust, k=3)
g3 <- cutree(edge.hclust, k=3)
count(g3,1)
color_vec <- c(rep("pink",length(g3 == 1)), rep("green",length(g3 == 2)), rep("blue",length(g3 == 3)))
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
color_lines(color_vec)
# untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE) # (common_subtrees_color_branches = TRUE)
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE, color_lines(color_vec)) # (common_subtrees_color_branches = TRUE)
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE, color_lines=color_vec) # (common_subtrees_color_branches = TRUE)
color_vec
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE) # (common_subtrees_color_branches = TRUE)
library(dendextend)
install.packages("colorspace")
install.packages("colorspace")
install.packages("ggplot2")
library(dendextend)
library(colorspace)
library(ggplot2)
install.packages("dplyr")
library(dplyr)
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE) # (common_subtrees_color_branches = TRUE)
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE, color_lines=color_vec) # (common_subtrees_color_branches = TRUE)
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE, color_lines=c("pink", "green", "blue")) # (common_subtrees_color_branches = TRUE)
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE, color_lines=c("pink", "pink", "green", "blue")) # (common_subtrees_color_branches = TRUE)
color_vec
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE, color_lines=c(c("pink"), c("green"), c("blue")) # (common_subtrees_color_branches = TRUE)
color_vec
# plot dendrogram with heat map
library(gplots)
some_col_func <- function(n) rev(colorspace::heat_hcl(n, c = c(80, 30), l = c(30, 90), power = c(1/5, 1.5)))
gplots::heatmap.2(as.matrix(odata_edge.mrel),
main = "Heatmap for otolith edge",
srtCol = 20,
dendrogram = "row",
Rowv = dend_edge,
Colv = "NA", # this to make sure the columns are not ordered
trace="none",
margins =c(5,0.1),
key.xlab = "Cm",
denscol = "grey",
density.info = "density",
RowSideColors = rev(labels_colors(dend_edge)), # to add nice colored strips
col = some_col_func
)
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE, color_lines=c(c("pink"), c("green"), c("blue"))) # (common_subtrees_color_branches = TRUE)
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE, color_lines=color_vec # (common_subtrees_color_branches = TRUE)
color_vec
# plot dendrogram with heat map
library(gplots)
some_col_func <- function(n) rev(colorspace::heat_hcl(n, c = c(80, 30), l = c(30, 90), power = c(1/5, 1.5)))
gplots::heatmap.2(as.matrix(odata_edge.mrel),
main = "Heatmap for otolith edge",
srtCol = 20,
dendrogram = "row",
Rowv = dend_edge,
Colv = "NA", # this to make sure the columns are not ordered
trace="none",
margins =c(5,0.1),
key.xlab = "Cm",
denscol = "grey",
density.info = "density",
RowSideColors = rev(labels_colors(dend_edge)), # to add nice colored strips
col = some_col_func
)
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE, color_lines=color_vec) # (common_subtrees_color_branches = TRUE)
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE, type="t", color_lines=color_vec) # (common_subtrees_color_branches = TRUE)
site <- structure(list(name = structure(c(1L, 3L, 4L, 5L, 6L, 7L, 8L,9L, 10L, 2L), .Label = c("t1", "t10", "t2", "t3", "t4", "t5","t6", "t7", "t8", "t9"), class = "factor"), site = c(1L, 1L,1L, 2L, 2L, 3L, 1L, 3L, 2L, 2L)), .Names = c("name", "site"), row.names = c(NA,10L), class = "data.frame")
View(site)
typeof(site)
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE, color_lines=color_vec) # (common_subtrees_color_branches = TRUE)
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
untangle(method = "step1side", k_seq = 3:20) %>%
set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE, color_lines=color_vec) # (common_subtrees_color_branches = TRUE)
?structure
View(odata_combo)
str(odata_combo$Sample)
site <- data.frame(name= odata_combo$Sample, site=odata_combo$SiteYear)
colnames(site) <- c("sample", "site")
head(site)
library(ape)
site$sample <- as.character(site$sample)
t1 <- rcoal(10)
t1
?rcoal
labels_df <- data.frame(dend_edge$tip.label)
labels_df
str(dend_edge)
color_vec
color_vec <- c(seq("pink",10),seq("blue",10))
color_vec <- c(rep("pink",10),rep("blue",10))
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
#untangle(method = "step1side", k_seq = 3:20) %>%
#set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE, color_lines=color_vec) # (common_subtrees_color_branches = TRUE)
color_vec
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
#untangle(method = "step1side", k_seq = 3:20) %>%
#set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE, color_lines=color_vec) # (common_subtrees_color_branches = TRUE)
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE, color_lines=c("pink", "green", "blue")) # (common_subtrees_color_branches = TRUE)
View(labels_df)
g3 <- cutree(edge.hclust, k=3)
color_vec <- c(rep("pink",length(g3 == 1)), rep("green",length(g3 == 2)), rep("blue",length(g3 == 3)))
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE, color_lines=c("pink", "green", "blue")) # (common_subtrees_color_branches = TRUE)
setwd("D:/Pacific cod/DataAnalysis/PCod-Korea-repo/otolith_analyses")
# Load data ---------------------------------------------------------------
odata <- read.csv("data/PCod_Korea_Microchem_filtered_edit.txt", header=TRUE, sep="\t")
odata_ex <- read.csv("data/PCod_Korea_ExpData_filtered.txt", header=TRUE, sep="\t")
structure <- read.csv("data/PCod_Korea_Structure_assignment.txt", header=TRUE, sep="\t")
odata_combo <- full_join(x=odata,y=odata_ex,by="Sample")
head(odata_combo)
odata_combo <- mutate(odata_combo, SiteYear=paste(Sampling.Site,Year, sep=""))
head(odata_combo)
odata_el <- odata_combo[,2:17]
head(odata_el)
odata_el.mrel <- decostand(odata_el, method="max")
head(odata_el.mrel)
odata_edge.mrel <- odata_el.mrel[,9:16] # only edge measurements
head(odata_edge.mrel)
odata_core.mrel <- odata_el.mrel[,1:8] # only core measurements
head(odata_core.mrel)
install.packages("vegan"); library(vegan)
odata_el.mrel <- decostand(odata_el, method="max")
head(odata_el.mrel)
odata_edge.mrel <- odata_el.mrel[,9:16] # only edge measurements
head(odata_edge.mrel)
odata_core.mrel <- odata_el.mrel[,1:8] # only core measurements
head(odata_core.mrel)
edge.mrel_dist <- dist(odata_edge.mrel, method = "euclidean")
core.mrel_dist <- dist(odata_core.mrel, method = "euclidean")
core.hclust <- hclust(d = core.mrel_dist, method = "ward.D2")
edge.hclust <- hclust(d = edge.mrel_dist, method = "ward.D2")
dend_edge <- as.dendrogram(edge.hclust)
dend_edge <- color_branches(dend_edge, k=2)
dend_edge
plot(dend_edge)
colors <- rainbow_hcl(7)[sort_levels_values(as.numeric(as.factor(odata_combo$SiteYear))[order.dendrogram(dend_edge)])]
labels_colors(dend_edge) <- colors
labels(dend_edge) <- paste(as.character(as.factor(odata_combo$SiteYear))[order.dendrogram(dend_edge)],
"(",labels(dend_edge),")",
sep = "")
dend_edge <- set(dend_edge, "labels_cex", 0.5)
dend_edge <- hang.dendrogram(dend_edge,hang_height=0.1)
par(mar = c(3,3,3,7))
siteyears = unique(odata_combo$SiteYear)
plot(dend_edge,
main = "Clustered Edge Microchemistry by Site
(k=2)",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = siteyears, fill = unique(colors))
odata_dendlist <- dendlist(as.dendrogram(edge.hclust), as.dendrogram(core.hclust))
names(odata_dendlist) <- c("edge", "core")
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE) # (common_subtrees_color_branches = TRUE)
g3 <- cutree(edge.hclust, k=3)
color_vec <- c(rep("pink",length(g3 == 1)), rep("green",length(g3 == 2)), rep("blue",length(g3 == 3)))
odata_dendlist %>% dendlist(which = c(1,2)) %>% ladderize %>%
set("branches_k_color", k=3) %>%
# untangle(method = "step1side", k_seq = 3:20) %>%
# set("clear_branches") %>% #otherwise the single lines are not black, since they retain the previous color from the branches_k_color.
tanglegram(faster = TRUE, color_lines=c("pink", "green", "blue")) # (common_subtrees_color_branches = TRUE)
gplots::heatmap.2(as.matrix(odata_edge.mrel),
main = "Heatmap for otolith edge",
srtCol = 20,
dendrogram = "row",
Rowv = dend_edge,
Colv = "NA", # this to make sure the columns are not ordered
trace="none",
margins =c(5,0.1),
key.xlab = "Cm",
denscol = "grey",
density.info = "density",
RowSideColors = rev(labels_colors(dend_edge)), # to add nice colored strips
col = some_col_func
)
library(gplots)
some_col_func <- function(n) rev(colorspace::heat_hcl(n, c = c(80, 30), l = c(30, 90), power = c(1/5, 1.5)))
gplots::heatmap.2(as.matrix(odata_edge.mrel),
main = "Heatmap for otolith edge",
srtCol = 20,
dendrogram = "row",
Rowv = dend_edge,
Colv = "NA", # this to make sure the columns are not ordered
trace="none",
margins =c(5,0.1),
key.xlab = "Cm",
denscol = "grey",
density.info = "density",
RowSideColors = rev(labels_colors(dend_edge)), # to add nice colored strips
col = some_col_func
)
dend_edge
dend_edge <- as.dendrogram(edge.hclust)
dend_edge <- color_branches(dend_edge, k=2)
dend_edge
plot(dend_edge)
colors <- rainbow_hcl(7)[sort_levels_values(as.numeric(as.factor(odata_combo$SiteYear))[order.dendrogram(dend_edge)])]
labels_colors(dend_edge) <- colors
labels(dend_edge) <- paste(as.character(as.factor(odata_combo$SiteYear))[order.dendrogram(dend_edge)],
"(",labels(dend_edge),")",
sep = "")
dend_edge <- set(dend_edge, "labels_cex", 0.5)
dend_edge <- hang.dendrogram(dend_edge,hang_height=0.1)
par(mar = c(3,3,3,7))
siteyears = unique(odata_combo$SiteYear)
plot(dend_edge,
main = "Clustered Edge Microchemistry by Site
(k=2)",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = siteyears, fill = unique(colors))
dend_edge <- as.dendrogram(edge.hclust)
dend_edge <- color_branches(dend_edge, k=2)
dend_edge
plot(dend_edge)
colors <- rainbow_hcl(5)[sort_levels_values(as.numeric(as.factor(odata_combo$Sampling.Site))[order.dendrogram(dend_edge)])]
labels_colors(dend_edge) <- colors
labels(dend_edge) <- paste(as.character(as.factor(odata_combo$SiteYear))[order.dendrogram(dend_edge)],
"(",labels(dend_edge),")",
sep = "")
dend_edge <- set(dend_edge, "labels_cex", 0.5)
dend_edge <- hang.dendrogram(dend_edge,hang_height=0.1)
par(mar = c(3,3,3,7))
siteyears = unique(odata_combo$SiteYear)
plot(dend_edge,
main = "Clustered Edge Microchemistry by Site
(k=2)",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = siteyears, fill = rainbow_hcl(5))
dend_edge <- as.dendrogram(edge.hclust)
dend_edge <- color_branches(dend_edge, k=2)
dend_edge
plot(dend_edge)
colors <- rainbow_hcl(5)[sort_levels_values(as.numeric(as.factor(odata_combo$Sampling.Site))[order.dendrogram(dend_edge)])]
labels_colors(dend_edge) <- colors
labels(dend_edge) <- paste(as.character(as.factor(odata_combo$Sampling.Site))[order.dendrogram(dend_edge)],
"(",labels(dend_edge),")",
sep = "")
dend_edge <- set(dend_edge, "labels_cex", 0.5)
dend_edge <- hang.dendrogram(dend_edge,hang_height=0.1)
par(mar = c(3,3,3,7))
plot(dend_edge,
main = "Clustered Edge Microchemistry by Site
(k=2)",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = as.factor(odata_combo$Sampling.Site), fill = rainbow_hcl(5))
dend_edge <- as.dendrogram(edge.hclust)
dend_edge <- color_branches(dend_edge, k=2)
dend_edge
plot(dend_edge)
colors <- rainbow_hcl(5)[sort_levels_values(as.numeric(as.factor(odata_combo$Sampling.Site))[order.dendrogram(dend_edge)])]
labels_colors(dend_edge) <- colors
labels(dend_edge) <- paste(as.character(as.factor(odata_combo$Sampling.Site))[order.dendrogram(dend_edge)],
"(",labels(dend_edge),")",
sep = "")
dend_edge <- set(dend_edge, "labels_cex", 0.5)
dend_edge <- hang.dendrogram(dend_edge,hang_height=0.1)
par(mar = c(3,3,3,7))
plot(dend_edge,
main = "Clustered Edge Microchemistry by Site
(k=2)",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = odata_combo$Sampling.Site, fill = rainbow_hcl(5))
plot(dend_edge,
main = "Clustered Edge Microchemistry by Site
(k=2)",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = unique(odata_combo$Sampling.Site), fill = rainbow_hcl(5))
plot(dend_edge,
main = "Clustered Edge Microchemistry by Site
(k=2)",
horiz =  TRUE,  nodePar = list(cex = .007), hang=-1)
plot(dend_edge,
main = "Clustered Edge Microchemistry by Site
(k=2)",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = unique(odata_combo$Sampling.Site), fill = rainbow_hcl(5))
dend_core <- as.dendrogram(core.hclust)
dend_core <- color_branches(dend_core, k=2)
dend_core
colors <- rainbow_hcl(5)[sort_levels_values(as.numeric(as.factor(odata_combo$Sampling.Site))[order.dendrogram(dend_core)])]
labels_colors(dend_core) <- colors
labels(dend_core) <- paste(as.character(as.factor(odata_combo$Sampling.Site))[order.dendrogram(dend_core)], "(",labels(dend_ecore),")", sep = "")
dend_core <- set(dend_core, "labels_cex", 0.5)
dend_core <- hang.dendrogram(dend_core,hang_height=0.1)
par(mar = c(3,3,3,7))
plot(dend_core,
main = "Clustered Core Microchemistry by Site
(k=2)",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = unique(odata_combo$Sampling.Site), fill = rainbow_hcl(5))
dend_core <- as.dendrogram(core.hclust)
dend_core <- color_branches(dend_core, k=2)
dend_core
colors <- rainbow_hcl(5)[sort_levels_values(as.numeric(as.factor(odata_combo$Sampling.Site))[order.dendrogram(dend_core)])]
labels_colors(dend_core) <- colors
labels(dend_core) <- paste(as.character(as.factor(odata_combo$Sampling.Site))[order.dendrogram(dend_core)], "(",labels(dend_core),")", sep = "")
dend_core <- set(dend_core, "labels_cex", 0.5)
dend_core <- hang.dendrogram(dend_core,hang_height=0.1)
par(mar = c(3,3,3,7))
plot(dend_core,
main = "Clustered Core Microchemistry by Site
(k=2)",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = unique(odata_combo$Sampling.Site), fill = rainbow_hcl(5))
rainbow_hcl(5)
legend("topleft", legend = unique(odata_combo$Sampling.Site), fill = rev(rainbow_hcl(5)))
legend("topleft", legend = unique(odata_combo$Sampling.Site), fill = rainbow_hcl(5))
leg_colors <- c("#C29DDE", "#BDAB66", "#65BC8C", "#55B8D0", "#E495A5")
legend("topleft", legend = unique(odata_combo$Sampling.Site), fill = leg_colors)
dend_core <- color_branches(dend_core, k=3)
colors <- rainbow_hcl(5)[sort_levels_values(as.numeric(as.factor(odata_combo$Sampling.Site))[order.dendrogram(dend_core)])]
labels_colors(dend_core) <- colors
labels(dend_core) <- paste(as.character(as.factor(odata_combo$Sampling.Site))[order.dendrogram(dend_core)], "(",labels(dend_core),")", sep = "")
dend_core <- set(dend_core, "labels_cex", 0.5)
dend_core <- hang.dendrogram(dend_core,hang_height=0.1)
par(mar = c(3,3,3,7))
plot(dend_core,
main = "Clustered Core Microchemistry by Site
(k=2)",
horiz =  TRUE,  nodePar = list(cex = .007))
leg_colors <- c("#C29DDE", "#BDAB66", "#65BC8C", "#55B8D0", "#E495A5")
legend("topleft", legend = unique(odata_combo$Sampling.Site), fill = leg_colors)
